package it.uniroma3.model;


import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQuery;
import javax.persistence.Column;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.JoinColumn;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import java.util.Date;
import java.util.List;

	@Entity
	@Table(name = "orders")
	@NamedQuery(name = "findAllOrder", query = "SELECT o FROM Order o")
	public class Order {
        
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Long id;

	@Column(nullable = false)
	@Temporal(TemporalType.DATE)
	private Date dataCreazione;
	
	@Temporal(TemporalType.DATE)
	private Date dataChiusura;
	
	@Temporal(TemporalType.DATE)
	private Date dataEvasione;

	@OneToMany
	@JoinColumn(name = "orders_id")
	private List<OrderLine> orderLines;
	
	public Order() {
    }

	public Order(Date dataCreazione) {
        this.dataCreazione = dataCreazione;
}

    //Getters & Setters        
    
   public Long getId() {
        return id;
    }
   
	public void setId(Long id) {
		this.id = id;
	}

    public Date getDataCreazione() {
        return this.dataCreazione;
    }

    public void setDataCreazione(Date dataCreazione) {
        this.dataCreazione = dataCreazione;
    }
    
    public Date getDataChiusura() {
        return this.dataChiusura;
    }
    
    public void setDataChiusura(Date dataChiusura) {
        this.dataChiusura = dataChiusura;
    }

    public Date getDataEvasione(){
    	return this.dataEvasione;
    }
    
    public void setDataEvasione(Date dataEvasione){
    	this.dataEvasione = dataEvasione;
    }
	
//    public boolean equals(Object obj) {
//        OrderLine orderLine = (OrderLine)obj;
//        return this.getCode().equals(product.getCode());
//    }
//
//    public int hashCode() {
//         return this.code.hashCode();
//    }
	
}